var documenterSearchIndex = {"docs":
[{"location":"api/","page":"API / DocStrings","title":"API / DocStrings","text":"Modules = [ERPExplorer]\nOrder   = [:function]","category":"page"},{"location":"api/#ERPExplorer.define_style_scatter_lines!-NTuple{6, Any}","page":"API / DocStrings","title":"ERPExplorer.define_style_scatter_lines!","text":"define_style_scatter_lines!(plots, data, dict_grid, scatter_styles, line_styles, continuous_vars)\n\nDefine styling of lines and points (scatter).\n\nActions:\n- subset the data.\n- select points and plot scatter. Define scatter style: markersize and color.\n- plot lines and define line style: colormap, color range, color.\n Arguments:\n- plots::Vector{Makie.PlotSpec} - an empty SpecApi list to push into parts of the layout.\n- data::DataFrame - a DataFrame with predicted values to be subsetted.\n- dict_grid::Dict{Any, Any} - dictionary with one of the possible combination of selected categorical terms.\n- scatter_styles::Dict{Any, Any} - define colors of scatter.\n- line_styles:: Dict{Symbol, Pair{Symbol, Tuple{Tuple{String, String}, Symbol}}} - define line styles: colormap, color range, color.\n- continuous_vars::Vector{Symbol} - continuous terms.\n\nReturn Value: Makie.GridLayoutSpec.\n\n\n\n\n\n","category":"method"},{"location":"api/#ERPExplorer.explore-Tuple{UnfoldModel}","page":"API / DocStrings","title":"ERPExplorer.explore","text":"explore(model::UnfoldModel; positions = nothing, size = (700, 600))\n\nRun the dashboard for explorative ERP analysis.\n\nArguments:\n- model::UnfoldLinearModel{Float64} - Unfold linear model with categorical and continuous terms.\n- positions::Vector{Point{2, Float32}} - x an y coordinates of the channels on topoplot.\n- size::Tuple{Float64, Float64} - size of the topoplot panel.\n Return Value: Hyperscript.Node{Hyperscript.HTMLSVG} - final HTML code of the dashboard.\n\n\n\n\n\n","category":"method"},{"location":"api/#ERPExplorer.extract_variables-Tuple{Any}","page":"API / DocStrings","title":"ERPExplorer.extract_variables","text":"extract_variables(model)\n\nTakes the Unfold model and extract variables from it for future functions. \n\nArguments:\n- model::UnfoldLinearModel{Float64} - Unfold linear model with categorical and continuous terms.\n\nThese variables are:\n- names - all terms of the model.\n- symbols- non-numeric terms of the model.\n- types - types of terms.\n- vals - min, max, variance, mean for continuous terms, levels for categorical terms.\\ \n\nReturn Values: Vector{Pair{Symbol}}.\n\n\n\n\n\n","category":"method"},{"location":"api/#ERPExplorer.formular_widgets-Tuple{Any}","page":"API / DocStrings","title":"ERPExplorer.formular_widgets","text":"formular_widgets(variables)\n\nCreate widgets to control all model variables.\n Arguments:\n- variables::Vector{Pair{Symbol}} - vector of key-value pairs with information about the model formula terms.\n\nActions:\n\nExtract ranges of term values.\n\nCreate widgets for each term (Slider for continuous, SelectSet for categorical).\n\nCreating the formula with checkboxes and translating to HTML code.\n\nConvert checkboxes to Observables.\\ \n\nReturn Values:\n- formula_defaults::Dict{Symbol, Observable{Bool}} - formula widgets with default values.\n- formula_toggle::Observable{Vector{Any}} - formula widgets with all values and toggle value.\n- formula_DOM::Hyperscript.Node{Hyperscript.HTMLSVG} - HTML element that can be displayed to interact with the the formula.\n- formula_values::Vector{Pair{Symbol}} - formula widgets with all values.\n\n\n\n\n\n\n","category":"method"},{"location":"api/#ERPExplorer.get_ERP_data-Tuple{Any, Any, Any}","page":"API / DocStrings","title":"ERPExplorer.get_ERP_data","text":"get_ERP_data(model, formula_toggle, channel_chosen)\n\nCreates a dictionary with yhat values and more.\n Arguments:\n- model::UnfoldLinearModel{Float64} - vector of key-value pairs with information about the model formula terms.\n- formula_toggle::Observable{Vector{Any}} - a signal that emits a dictionary with the current values of the widgets.\n- channel_chosen::Observable{Int64} - number of selected channels.\n Actions:\n- Compute predicted value (yhat) of the given model using effects.\n- Create DataFrame with columns: yhat, channel, dummy, time, eventname and unique columns for each formula term.\n- Make it Observable.\n Return Value: yhats_signal::Observable{Any} containing DataFrame with yhats. \n\n\n\n\n\n","category":"method"},{"location":"api/#ERPExplorer.mapping_dropdowns-Tuple{Any, Any}","page":"API / DocStrings","title":"ERPExplorer.mapping_dropdowns","text":"mapping_dropdowns(varnames, var_types)\n\nMap and arrange drop-down menus on the left panel of the dashboard.\n Arguments:\n- varnames::Vector{Symbol} - vector of the model formula terms.\n- var_types::Vector{Symbol} - vector of types of the model formula terms.\n Actions:\n- Take categorical variables and put their values into drop-down menus.\n- There will be 5 menus for: color, markers, line styles, column and row facets.\n- Map each menu object to its name in the image.\n- Create HTML containers using Bonito's Document Object Model (DOM).\n- Arrange the containers on the panel using Col() and Row(). Specify their styling.\n Return Values:\n- mapping::Observable{Dict{Symbol, Symbol}} - interactive dictionary with menues and their default value.\n- mapping_dom::Hyperscript.Node{Hyperscript.HTMLSVG} - dropdown menus in HTML code with styling and layout.\n\n\n\n\n\n\n","category":"method"},{"location":"api/#ERPExplorer.topoplot_widget-Tuple{Any, Any}","page":"API / DocStrings","title":"ERPExplorer.topoplot_widget","text":"topoplot_widget(positions; size = ())\n\nControls the topoplot in the lower left panel of the figure.\nHighlight the location of the current electrode and allows electrode selection.\n Arguments:\n- positions::Vector{Point{2, Float32}} - x an y coordinates of the channels.\n- size::Tuple{Float64, Float64} - size of the topoplot panel.\n Actions:\n- Create interactive scatter.\n\nHighlight the selected electrode with white color, others are grayed out.\n\nCreate a topolot with a null interpolator and define its style and behavior.\n\nHide decorations and spines.\n\n\nReturn Values:\n- topo_widget::Makie.FigureAxisPlot - topoplot widget.\n- channel_chosen::Observable{Int64} - number of the selected channel.\n\n\n\n\n\n\n","category":"method"},{"location":"api/#ERPExplorer.update_grid-NTuple{5, Any}","page":"API / DocStrings","title":"ERPExplorer.update_grid","text":"update_grid(data, formula_values, categorical_vars, continuous_terms, mapping_obs)\n\nPlotting and updating an interactive dashboard.\n\nArguments:\n- data::DataFrame - the result of effects(Dict(...), model) with columns: yhat, channel, dummy, time, eventname and unique columns for each formula term.\n- formula_values::Vector{Pair{Symbol}} - value range for continuous variables, levels for categorical.\n- categorical_vars::Vector{Symbol} - categorical terms.\n- continuous_terms::Vector{Symbol} - continuous terms.\n- mapping::Dict{Symbol, Symbol} - dictionary with dropdown menus and their default values.\n Action:\n- Create default palettes for colors, markers, line styles, and color styles for continuous values.\n- Check that the terms are not empty.\n- Plot the dashboard.\n- Define line and scatter styles for the line plot.\n- Add line and scatter styles to the legend.\n\nReturn Value: Makie.GridLayoutSpec.\n\n\n\n\n\n","category":"method"},{"location":"api/","page":"API / DocStrings","title":"API / DocStrings","text":"Internally, we use a PlotConfig struct to keep track of common plotting options, so that all functions have a similar API.","category":"page"},{"location":"#ERPExplorer-Highlights","page":"ERPExplorer highlights","title":"ERPExplorer Highlights","text":"","category":"section"},{"location":"","page":"ERPExplorer highlights","title":"ERPExplorer highlights","text":"ERPExplorer.jl allows interactive exploration of regression-ERPs. You can switch on and off formula terms, term values, row and column faceting, line colours and style, marker style.","category":"page"}]
}

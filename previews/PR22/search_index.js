var documenterSearchIndex = {"docs":
[{"location":"api/","page":"API / DocStrings","title":"API / DocStrings","text":"Modules = [ERPExplorer]\nOrder   = [:function]","category":"page"},{"location":"api/#ERPExplorer.define_scatter_line_style!-NTuple{6, Any}","page":"API / DocStrings","title":"ERPExplorer.define_scatter_line_style!","text":"define_scatter_line_style!(plots, data, vars, scatter_styles, line_styles, continuous_vars)\n\nDefine styling of lines and points (scatter).\n\nsubset the data.\nselect points and plot scatter. Define scatter style: markersize and color.\nplot lines and define line style: colormap, color range, color.\n\nArguments:\n- plots::Vector{Makie.PlotSpec} - an empty SpecApi list to push into parts of the layout.\n- data::DataFrame - a DataFrame with predicted values to be subsetted.\n- vars::Dict{Any, Any} contains the levels to be plotted.\n- scatter_styles::Dict{Any, Any} - define colors of scatter. \n\nline_styles:: Dict{Symbol, Pair{Symbol, Tuple{Tuple{String, String}, Symbol}}} - define line styles: colormap, color range, color.\ncontinuous_vars::Vector{Symbol} - continuous terms.\n\nReturn Value: Makie.GridLayoutSpec.\n\n\n\n\n\n","category":"method"},{"location":"api/#ERPExplorer.explore-Tuple{UnfoldModel}","page":"API / DocStrings","title":"ERPExplorer.explore","text":"explore(model::UnfoldModel; positions = nothing, size = (700, 600))\n\nRun the dashboard for explorative ERP analysis.\n\nArguments:\n- model::UnfoldLinearModel{Float64} - Unfold linear model with categorical and continuous terms.\n\npositions::Vector{Point{2, Float32}} - x an y coordinates of the channels.\nsize::Tuple{Float64, Float64} - size of the topoplot panel.\n\nActions:\n\nExtract formula terms and itheir features.\nCreate interactive formula with checkboxes. \nArrange and map dropdown menus.\nCreate interactive topoplot.\nCreate Observable DataFrame with predicted values (yhats) and more.\nCreate GridLayout.\nUse Base.ReentrantLock, a synchronization primitive_ to manage concurrent access to shared resources in multi-threaded programs\nCreate Figure.\nTranslate into into HTML code using DOMs.\n\nReturn Value: Hyperscript.Node{Hyperscript.HTMLSVG} - final HTML code of the dashboard.\n\n\n\n\n\n","category":"method"},{"location":"api/#ERPExplorer.extract_variables-Tuple{Any}","page":"API / DocStrings","title":"ERPExplorer.extract_variables","text":"extract_variables(model)\n\nTakes the Unfold model and extract variables from it for future functions. \n\nArguments:\n- model::UnfoldLinearModel{Float64} - Unfold linear model with categorical and continuous terms.\n\nThese variables are:\n\nnames - all terms of the model. \nsymbols- non-numeric terms of the model.\ntypes - types of terms.\n\nvals - min, max, variance, mean for continuous terms, levels for categorical terms. \n\nReturn Values: Vector{Pair{Symbol}}.\n\n\n\n\n\n","category":"method"},{"location":"api/#ERPExplorer.formular_widgets-Tuple{Any}","page":"API / DocStrings","title":"ERPExplorer.formular_widgets","text":"formular_widgets(variables)\n\nCreates widgets to control each variable of a model.\n Arguments:\n- variables::Vector{Pair{Symbol}} - vector of key-value pairs with information about the model formula terms.\n\nActions:\n\nExtract ranges of term values.\nCreate widgets for each term (Slider for continuous, SelectSet for categorical).\nCreating the formula with checkboxes and translating to HTML code. \nConvert checkboxes to Observables. \n\nReturn Values:\n\nwidget_checkbox: Dictionary with the current values of the widgets (term => values).\nwidget_signal: widget_checkbox but as Observable, a signal that emits a dictionary with the current values of the widgets.\nformular_widget: The HTML element that can be displayed to interact with the the widgets.\nvalue_ranges: A dictionary containing the value ranges of each formula term.\n\n\n\n\n\n","category":"method"},{"location":"api/#ERPExplorer.mapping_dropdowns-Tuple{Any, Any}","page":"API / DocStrings","title":"ERPExplorer.mapping_dropdowns","text":"mapping_dropdowns(varnames, var_types)\n\nMap and arrange dropdown menus on the left panel of the dashboard.\n Arguments:\n- varnames::Vector{Symbol} - vector of the model formula terms.\n\nvar_types::Vector{Symbol} - vector of types of the model formula terms.\n\nActions:\n\nTake categorical variables and put their values into dropdown menus.\nThere will be 5 menus for: color, markers, line styles, column and row facets.\nMap each menu object with its name on the Figure.\nCreate HTML containers using Document Object Model (DOM) from Bonito. \nArrange containers on the panel using Col() and Row(). Specify their styling.\n\nReturn Values:\n\nmapping::Observable{Dict{Symbol, Symbol}} - interactive dictionary with menus and their default value.\nmapping_dom::Hyperscript.Node{Hyperscript.HTMLSVG} - dropdown menus in HTML code with styling and layout.\n\n\n\n\n\n","category":"method"},{"location":"api/#ERPExplorer.plot_data-NTuple{5, Any}","page":"API / DocStrings","title":"ERPExplorer.plot_data","text":"plot_data(data, value_ranges, categorical_vars, continuous_vars, mapping_obs)\n\nPlotting an interactive dashboard.\n\nArguments:\n\ndata::DataFrame - the result of effects(Dict(...), model) with columns: yhat, channel, dummy, time, eventname and unique columns for each formula term..\nvalue_ranges::Vector{Pair{Symbol}} - value range for continuous variables, levels for categorical.\ncategorical_vars::Vector{Symbol} - categorical terms.\ncontinuous_vars::Vector{Symbol} - continuous terms.\nmapping::Dict{Symbol, Symbol} - dictionary with dropdown menus and their default values.\n\nAction:\n\nCreate default palettes for colors, markers, line styles, and color styles for continuous values.\nCheck that the terms are not empty.\nPlot the dashboard.\nDefine line and scatter styles for the line plot.\nAdd line and scatter styles to the legend.\n\nReturn Value: Makie.GridLayoutSpec.\n\n\n\n\n\n","category":"method"},{"location":"api/#ERPExplorer.topoplot_widget-Tuple{Any}","page":"API / DocStrings","title":"ERPExplorer.topoplot_widget","text":"topoplot_widget(positions; size = ())\n\nControls the topoplot in the lower left panel of the figure.\nHighlight the location of the current electrode and allows electrode selection.\n\nArguments:\n- positions::Vector{Point{2, Float32}} - x an y coordinates of the channels.\n\nsize::Tuple{Float64, Float64} - size of the topoplot panel.\n\nActions:\n\nCreate interactive scatter.\nHighlight the selected electrode with white color, others are grayed out. \nCreate a topolot with a null interpolator and define its style and behavior.\nHide decorations and spines. \n\nReturn Values:\n\nh_topo::Makie.FigureAxisPlot - topoplot widget.\ninteractive_scatter::Observable{Int64} - number of the selected channel.\n\n\n\n\n\n","category":"method"},{"location":"api/#ERPExplorer.yhats_signal-Tuple{Any, Any, Any}","page":"API / DocStrings","title":"ERPExplorer.yhats_signal","text":"yhats_signal(model, widget_signal, channel)\n\nCreates a dictionary with yhat values and more.\n Arguments:\n- model::UnfoldLinearModel{Float64} - vector of key-value pairs with information about the model formula terms.\n\nwidget_signal::Observable{Vector{Any}} - a signal that emits a dictionary with the current values of the widgets.\nchannel::Observable{Int64} - number of selected channel- \n\nActions:\n\nCompute predicted value (yhat) of the given model using effects.\nCreate DataFrame with columns: yhat, channel, dummy, time, eventname and unique columns for each formula term.\nMake it Observable.\n\nReturn Value: yhats_signal::Observable{Any} containing DataFrame with yhats. \n\n\n\n\n\n","category":"method"},{"location":"api/","page":"API / DocStrings","title":"API / DocStrings","text":"Internally, we use a PlotConfig struct to keep track of common plotting options, so that all functions have a similar API.","category":"page"},{"location":"#ERPExplorer-Highlights","page":"ERPExplorer highlights","title":"ERPExplorer Highlights","text":"","category":"section"},{"location":"","page":"ERPExplorer highlights","title":"ERPExplorer highlights","text":"ERPExplorer.jl allows interactive exploration of regression-ERPs. You can switch on and off formula terms, term values, row and column faceting, line colours and style, marker style.","category":"page"}]
}
